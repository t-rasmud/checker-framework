package java.lang;

import org.checkerframework.checker.determinism.qual.Det;
import org.checkerframework.checker.determinism.qual.PolyDet;

class Thread implements Runnable {
  void run(@Det Thread this);
}

interface Runnable {
  abstract void run(@Det Runnable this);
}

package java.lang.instrument;

public interface ClassFileTransformer {
  default @Det byte @Nullable @Det [] transform(
      @Det ClassFileTransformer this,
      @Det @Nullable ClassLoader loader,
      @Det @InternalForm String className,
      @Det @Nullable Class<?> classBeingRedefined,
      @Det ProtectionDomain protectionDomain,
      @Det byte @Det [] classfileBuffer)
      throws IllegalClassFormatException;
}

package javax.tools;

interface JavaCompiler extends Tool, OptionChecker {
    CompilationTask getTask(Writer out,
                            JavaFileManager fileManager,
                            DiagnosticListener<? super JavaFileObject> diagnosticListener,
                            Iterable<@PolyDet String> options,
                            Iterable<@PolyDet String> classes,
                            Iterable<? extends @PolyDet JavaFileObject> compilationUnits);
}

interface StandardJavaFileManager extends JavaFileManager {
    Iterable<? extends @PolyDet JavaFileObject> getJavaFileObjectsFromFiles(
        Iterable<? extends @PolyDet File> files);
}
